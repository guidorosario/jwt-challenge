plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.27.0'
	id "com.palantir.docker-run" version "0.27.0"

}

group = 'com.jwt.challenge'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

docker {
	name "${project.name}:${project.version}"
	files "$buildDir/libs/${project.name}-${project.version}.jar"
	buildArgs([JAR_FILE: "${project.name}-${project.version}.jar"])
}

dockerRun {
	name "${project.name}"
	image "${project.name}:${project.version}"
	ports '8080:8080'
	clean true
	daemonize false
}
def projectName = "customer"
def projectId = "customer"

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.11'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework:spring-beans:5.3.22'

	implementation 'org.springdoc:springdoc-openapi-maven-plugin:1.4'
	// Swagger
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.7.0'
	implementation 'org.springdoc:springdoc-openapi-webflux-core:1.7.0'





	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	implementation 'io.rest-assured:rest-assured:4.4.0'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'io.projectreactor:reactor-test'


	testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.0')
	testImplementation('org.junit.jupiter:junit-jupiter-engine:5.9.0')


	testImplementation group: 'org.junit.platform', name: 'junit-platform-surefire-provider', version: '1.3.2'
	testImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.7.2'
	testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.7.2'
	implementation 'com.google.code.gson:gson:2.10.1'


	implementation "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"
	testImplementation "org.projectlombok:lombok"
	testAnnotationProcessor "org.projectlombok:lombok"


	testImplementation('org.springframework.boot:spring-boot-starter-test:2.7.4')
	testImplementation('org.springframework.security:spring-security-test:5.7.5')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.0')
	testImplementation('org.junit.jupiter:junit-jupiter-engine:5.9.0')
	testImplementation('org.mockito:mockito-junit-jupiter:4.8.0')
	testRuntimeOnly('org.hsqldb:hsqldb:2.7.1')
	testImplementation('org.testcontainers:testcontainers:1.17.4')
	testImplementation('org.testcontainers:mysql:1.17.4')
	testImplementation('org.flywaydb:flyway-core:9.4.0')
	testImplementation('com.github.tomakehurst:wiremock-jre8:2.34.0')
	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

}

test {

	useJUnitPlatform()

	// Always run tests, even when nothing changed.
	dependsOn 'cleanTest'

	// Show test results.
	testLogging {
		events "passed", "skipped", "failed"
	}
}
targetCompatibility = JavaVersion.VERSION_17